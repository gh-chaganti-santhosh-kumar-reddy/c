To debounce API calls in upcoming-events.tsx, follow these steps:

1. Install lodash if not already installed:
   npm install lodash

2. At the top of your file, add:
   import debounce from 'lodash/debounce';

3. Replace your useEffect for fetching events with this version:

useEffect(() => {
  const fetchFilteredEvents = async () => {
    try {
      const res = await axios.post("http://localhost:5274/api/Home/filter", filters);
      if (res.data && res.data.success && Array.isArray(res.data.data)) {
        setEvents(res.data.data);
      } else {
        setEvents([]);
      }
    } catch (err) {
      setEvents([]);
      console.error("Failed to fetch filtered events", err);
    }
  };

  const debouncedFetch = debounce(fetchFilteredEvents, 400);
  debouncedFetch();
  return () => debouncedFetch.cancel();
}, [filters]);

This will ensure the API is only called after the user stops typing for 400ms, preventing rate limit errors.
